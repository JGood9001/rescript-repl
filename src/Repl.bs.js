// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Curry = require("rescript/lib/js/curry.js");
var Js_exn = require("rescript/lib/js/js_exn.js");
var Process = require("process");
var Readline = require("readline");
var Child_process = require("child_process");
var Js_null_undefined = require("rescript/lib/js/js_null_undefined.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

var rl = Readline.createInterface({
      input: Process.stdin,
      output: Process.stdout
    });

rl.on("close", (function (param) {
        console.log("See You Space Cowboy");
        Fs.unlinkSync("./src/RescriptRepl.res");
        Fs.unlinkSync("./src/RescriptRepl.bs.js");
      }));

function prompt(query) {
  return new Promise((function (resolve, _reject) {
                rl.question(query, (function (x) {
                        resolve(x);
                      }));
              }));
}

function handle_get_next_contents(s) {
  try {
    var contents = Fs.readFileSync("./src/RescriptRepl.res", "utf8");
    return contents + "\n" + s;
  }
  catch (raw__obj){
    var _obj = Caml_js_exceptions.internalToOCamlException(raw__obj);
    if (_obj.RE_EXN_ID === Js_exn.$$Error) {
      return s;
    }
    throw _obj;
  }
}

function build_rescript_code(f) {
  return Child_process.exec("npm run res:build", (function (error, stdout, stderr) {
                if (error == null) {
                  return Curry._1(f, undefined);
                } else {
                  Js_null_undefined.bind(error, (function (error_str) {
                          var msg = error_str.message;
                          if (msg !== undefined) {
                            console.log("ERROR: " + msg);
                            return ;
                          }
                          
                        }));
                  return ;
                }
              }));
}

function eval_js_code(param) {
  var contents = Fs.readFileSync("./src/RescriptRepl.bs.js", "utf8");
  eval(contents);
}

function repl(param) {
  prompt("\u03BB> ").then(function (user_input) {
        if (user_input === ":exit") {
          rl.close();
        } else {
          var next_contents = handle_get_next_contents(user_input);
          Fs.writeFile("./src/RescriptRepl.res", next_contents, (function (err) {
                  if (!(err == null)) {
                    return Js_exn.raiseError(err);
                  }
                  
                }));
          build_rescript_code(eval_js_code);
          repl(undefined);
        }
        return Promise.resolve(user_input);
      });
}

exports.rl = rl;
exports.prompt = prompt;
exports.handle_get_next_contents = handle_get_next_contents;
exports.build_rescript_code = build_rescript_code;
exports.eval_js_code = eval_js_code;
exports.repl = repl;
/* rl Not a pure module */
